#!/usr/bin/python2.5

# Exercise 7
# @author Ilya Zayats
# @author Alex Vedyakov
# @company NRU ITMO

from PySide . QtCore import *
from PySide . QtGui import *
import sys, dbus, dbus.service, dbus.mainloop.glib

class dictionaryGUI( QMainWindow ):
  def __init__ ( self ):
    super (dictionaryGUI, self). __init__ ()
    vbox = QVBoxLayout()

    main_widget = QWidget()
    self.setCentralWidget(main_widget)   
    
    self.clear_dictionaries()
    
    menu = self.menuBar()
    set_server_action = menu.addAction("Set Server")
    set_server_action.triggered.connect(self.set_server)
    
    set_dict_action = menu.addAction("Select Dictionary")
    set_dict_action.triggered.connect(self.set_dictionary)
    
    self.server_name="dict.org"
    self.server_status="init"
    
    self.edit_line = QLineEdit()
    self.edit_line.returnPressed.connect(self.word_entered)
    vbox.addWidget(self.edit_line)

    self.definition_area = QTextEdit()
    self.definition_area.property('kineticScroller').setEnabled(True)
    self.definition_area.setReadOnly(True)
    vbox.addWidget(self.definition_area)
    
    self.status_line = QLabel("Status: initialization")
    vbox.addWidget(self.status_line)
    
    main_widget.setLayout(vbox)
    self.connectToBackend()
      
    self.dictionary_iface.listDictionaries()
  
  def connectToBackend(self):
    bus = dbus.SessionBus()
    remote_dictionary = bus.get_object("com.planarium.DictionaryService", "/com/planarium/DictionaryObject")
    self.dictionary_iface = dbus.Interface(remote_dictionary, "com.planarium.DictionaryService")
    self.dictionary_iface.connect_to_signal("returnDefinition", self.definition_acquired )
    self.dictionary_iface.connect_to_signal("returnListDictionaries", self.set_servers_list )
    self.dictionary_iface.connect_to_signal("returnStatus", self.set_server_status )
    self.dictionary_iface.connect_to_signal("returnError", self.show_server_error )
    
    if self.server_name!='dict.org':
      self.dictionary_iface.setServer(self.server_name)
  
  def word_entered(self):
    word=self.edit_line.text().lower()
    if self.server_status=='sleep':
      self.connectToBackend()
      
    self.dictionary_iface.define(word,self.current_dictionary)
    
  def definition_acquired(self,text):
    self.definition_area.setPlainText(text)
    
  def clear_dictionaries(self):
    self.dictionaries_list = {}
    self.current_dictionary = "*"
    self.current_dict_index = 0
  
  def set_server(self):
    d = QDialog()
    vbox = QVBoxLayout()
 
    self.server_name = QLineEdit()
    self.server_name.returnPressed.connect(self.new_server_entered)
    self.server_name.returnPressed.connect(d.accept)
    
    vbox.addWidget(QLabel("Enter server address"))
    vbox.addWidget(self.server_name)   
    d.setLayout(vbox)
    return d.exec_()
    
  def set_dictionary(self):
    d = QDialog()
    vbox = QVBoxLayout()
    
    vbox.addWidget(QLabel("Select Dictionary"))
    self.dictionaries_list_box = QComboBox()
    
    self.dictionaries_list_box.addItem("All Dictionaries")
    self.dictionaries_list_box.addItem("First Found")
    
    for dictionary in self.dictionaries_list:
      self.dictionaries_list_box.addItem(dictionary)
      
    if self.current_dict_index:
      self.dictionaries_list_box.setCurrentIndex(self.current_dict_index)
      
    vbox.addWidget(self.dictionaries_list_box)
    self.dictionaries_list_box.currentIndexChanged.connect(self.new_dictionary_entered)
    self.dictionaries_list_box.currentIndexChanged.connect(d.accept)
    
    d.setLayout(vbox)
    return d.exec_()
  
  def new_server_entered(self):
    self.clear_dictionaries()
    if self.server_status=='sleep':
      self.connectToBackend()
    self.dictionary_iface.setServer(self.server_name.text())
    
    
  def new_dictionary_entered(self):
    if self.dictionaries_list_box.currentText() == "All Dictionaries":
      self.current_dictionary = "*"
    elif self.dictionaries_list_box.currentText() == "First Found":
      self.current_dictionary = "!"
    else:
      self.current_dictionary = self.dictionaries_list[self.dictionaries_list_box.currentText()]
    self.current_dict_index = self.dictionaries_list_box.currentIndex()
    
  def set_servers_list(self, servers_string):
    self.last_error=False
    dictionaries=servers_string.split("\r\n");
    self.clear_dictionaries()
    for line in dictionaries:
      a=line.split(' ',1)
      self.dictionaries_list[a[1][1:-1]]=a[0]
        
  def set_server_status(self, status_string):
    self.last_error=False
    self.server_status=status_string
    self.status_line.setText('Status: '+status_string)
    
  def show_server_error(self, error_string):
    if self.last_error!=error_string:
      self.last_error=error_string
      QMessageBox.critical(self, "Server error", error_string )

if __name__ == '__main__':
  dbus.mainloop.glib.DBusGMainLoop(set_as_default = True)
  app = QApplication( sys . argv )
  w = dictionaryGUI()
  w.show()
  app.exec_()
  sys.exit()
